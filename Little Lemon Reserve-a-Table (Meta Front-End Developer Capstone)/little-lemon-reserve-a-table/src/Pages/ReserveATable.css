.ReserveForm {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 2em;
    width: 50em;
    padding: 2em calc(50% - 25em);
}

.ReserveForm label:not(:has(input[type="radio"])) {
    grid-column: auto;
    grid-row: auto;
    display: flex;
    flex-direction: column;
}

.ReserveForm label, .ReserveForm legend {
    color: var(--primary-green);
}

.ReserveForm label span:not([aria-hidden]),
.ReserveForm legend span:not([aria-hidden]) {
    display: flex;
}

.ReserveForm textarea {
    border-radius: 8px;
    background-color: var(--secondary-white);
    color: var(--secondary-black);
    border: none;
    box-shadow: 0 4px 4px rgb(from var(--primary-green) r g b / 0.25) inset,
                0 -4px 4px rgb(from var(--primary-green) r g b / 0.25) inset;
    height: 5em;
    padding: 0 0.2em;
}

#seatingChoice {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    flex-grow: 1;
    padding: 0;
    margin: 0;
    border: none;
}

#seatingChoice label {
    display: flex;
}

#seatingChoice input[type="radio"] {
    /* appearance: none; */
    padding: 0;
    margin: 0 1em 0 0;
    width: 2em;
    height: 2em;
    background-color: var(--secondary-white);
    color: var(--primary-green);
    border-color: var(--primary-green);
    border: 2px solid;
    border-radius: 50%;
}
/* #seatingChoice input[type="radio"]:checked {
    width: 1em;
    padding: 1em;
} */

.ReserveForm > button {
    width: 12em;
    height: 3em;
    grid-column: 1/4;
    margin: auto;
}

/* Styles for invalid fields */
div:has(#reservationDate:user-invalid:not(:out-of-range))::after {
    content: "This field is required and must be a valid date.";
}
div:has(#reservationDate:user-invalid:out-of-range)::after {
    content: "Date can't be in the past.";
}

div:has(#reservationTime:user-invalid)::after {
    content: "Please choose from the available times."
}

div:has(#numOfGuests:user-invalid:out-of-range)::after {
    content: "Number of guests must be between 1 and 10.";
}
div:has(#numOfGuests:user-invalid:not(:out-of-range))::after {
    content: "This field is required and must be a whole number.";
}

div:has([id$="Radio"]:user-invalid)::after {
    content: "Please choose one of these options.";
}

div:has(#occasion:user-invalid)::after {
    content: 'Please choose from the available options, or choose "Other" and explain in the comments.'
}

div:has(#comments:user-invalid)::after {
    content: 'If you set the "Occasion" field to "Other", please use this comments box to explain what the occasion is.'
}

textarea:user-invalid, input[type=radio]:user-invalid {
    background-color: var(--secondary-pink);
}
textarea:user-valid, input[type=radio]:user-valid {
    background-color: var(--secondary-white);
}

@media only screen and (max-width: 52em) {
    .ReserveForm {
        display: flex;
        flex-direction: column;
        width: calc(100% - 2em);
        padding: 2em 1em;
    }

    #seatingChoice label {
        padding-block: 0.5em;
    }
}